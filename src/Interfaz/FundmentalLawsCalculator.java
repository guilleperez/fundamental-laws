/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.awt.event.ActionEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Guillermo Pérez Trueba
 */
public class FundmentalLawsCalculator extends javax.swing.JFrame {
    
    private String r;
    private String n;
    private String u;
    private String x;
    private String z;
    private String xk;
    private String sk;
    private String vk;
    private String dk;
    private String c;
    private String ck;
    private String t;
    private String bk;

    /**
     * Creates new form AcercaDe
     */
    public FundmentalLawsCalculator() {
        initComponents();
        render();

        fundamentalLaws.addActionListener ((ActionEvent e) -> {
            render();
        });
        vars.addActionListener((ActionEvent e) -> {
            getVars();
            disableVar();
        });
    }
    private void render(){
        hideTextFields();
        getVariables();
        setFormulaLabel();
        disableVar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ckInput1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel18 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fundamentalLaws = new javax.swing.JComboBox<>();
        vars = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        formulaLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        xInput = new javax.swing.JTextField();
        nInput = new javax.swing.JTextField();
        rInput = new javax.swing.JTextField();
        zInput = new javax.swing.JTextField();
        uInput = new javax.swing.JTextField();
        xLabel = new javax.swing.JLabel();
        nLabel = new javax.swing.JLabel();
        rLabel = new javax.swing.JLabel();
        zLabel = new javax.swing.JLabel();
        uLabel = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        xkInput = new javax.swing.JTextField();
        skInput = new javax.swing.JTextField();
        vkInput = new javax.swing.JTextField();
        dkInput = new javax.swing.JTextField();
        skLabel = new javax.swing.JLabel();
        xkLabel = new javax.swing.JLabel();
        vkLabel = new javax.swing.JLabel();
        dkLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        cInput = new javax.swing.JTextField();
        tInput = new javax.swing.JTextField();
        ckInput = new javax.swing.JTextField();
        bkInput = new javax.swing.JTextField();
        cLabel = new javax.swing.JLabel();
        tLabel = new javax.swing.JLabel();
        ckLabel = new javax.swing.JLabel();
        bkLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCalculate = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultOutput = new javax.swing.JTextPane();
        jPanel16 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        note = new javax.swing.JTextPane();

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        jLabel6.setText("jLabel5");

        ckInput1.setToolTipText("");
        ckInput1.setMinimumSize(new java.awt.Dimension(20, 20));
        ckInput1.setPreferredSize(new java.awt.Dimension(6, 25));
        ckInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckInput1ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Select the Fundamental Law you want to calculate");

        fundamentalLaws.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Utilization Law", "Little’s Law", "Response Time Law", "Forced Flow Law" }));

        vars.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "X", "R", "Z", "U", "Xk", "Sk", "Vk", "Dk" }));
        vars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varsActionPerformed(evt);
            }
        });

        jLabel3.setText("Select the variable you want to calculate");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vars, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fundamentalLaws, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fundamentalLaws, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(vars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel10.setText("Vk = Ck/C");

        jLabel11.setText("Uk = Bk/T");

        jLabel5.setText("Sk = Bk/Ck");

        jLabel8.setText("Dk = Vk × Sk");

        jLabel15.setText("Sk = (Uk × T)/Ck");

        jLabel16.setText("Xk = Ck/T");

        formulaLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        formulaLabel.setText("FORMULA");

        jLabel9.setText("Dk = (Uk × T)/C");

        jLabel12.setText("Dk = Bk/C");

        jLabel7.setText("Vk = Dk/Sk");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel16)
                            .addComponent(jLabel7))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)))
                    .addComponent(formulaLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addComponent(formulaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel16)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Formula Sheet");

        xInput.setPreferredSize(new java.awt.Dimension(6, 25));
        xInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xInputActionPerformed(evt);
            }
        });

        nInput.setPreferredSize(new java.awt.Dimension(6, 25));
        nInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nInputActionPerformed(evt);
            }
        });

        rInput.setPreferredSize(new java.awt.Dimension(6, 25));
        rInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rInputActionPerformed(evt);
            }
        });

        zInput.setPreferredSize(new java.awt.Dimension(6, 25));
        zInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zInputActionPerformed(evt);
            }
        });

        uInput.setPreferredSize(new java.awt.Dimension(6, 25));
        uInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uInputActionPerformed(evt);
            }
        });

        xLabel.setText("X");
        xLabel.setMaximumSize(new java.awt.Dimension(10, 20));
        xLabel.setMinimumSize(new java.awt.Dimension(10, 20));
        xLabel.setPreferredSize(new java.awt.Dimension(15, 25));

        nLabel.setText("N");
        nLabel.setMaximumSize(new java.awt.Dimension(10, 20));
        nLabel.setMinimumSize(new java.awt.Dimension(10, 20));
        nLabel.setPreferredSize(new java.awt.Dimension(15, 25));

        rLabel.setText("R");
        rLabel.setMaximumSize(new java.awt.Dimension(10, 20));
        rLabel.setMinimumSize(new java.awt.Dimension(10, 20));
        rLabel.setPreferredSize(new java.awt.Dimension(15, 25));

        zLabel.setText("Z");
        zLabel.setMaximumSize(new java.awt.Dimension(10, 20));
        zLabel.setMinimumSize(new java.awt.Dimension(10, 20));
        zLabel.setPreferredSize(new java.awt.Dimension(15, 25));

        uLabel.setText("U");
        uLabel.setMaximumSize(new java.awt.Dimension(10, 20));
        uLabel.setMinimumSize(new java.awt.Dimension(10, 20));
        uLabel.setPreferredSize(new java.awt.Dimension(15, 25));
        uLabel.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        xkInput.setToolTipText("");
        xkInput.setMinimumSize(new java.awt.Dimension(20, 20));
        xkInput.setPreferredSize(new java.awt.Dimension(6, 25));
        xkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xkInputActionPerformed(evt);
            }
        });

        skInput.setPreferredSize(new java.awt.Dimension(6, 25));
        skInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skInputActionPerformed(evt);
            }
        });

        vkInput.setPreferredSize(new java.awt.Dimension(6, 25));
        vkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vkInputActionPerformed(evt);
            }
        });

        dkInput.setPreferredSize(new java.awt.Dimension(6, 25));
        dkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dkInputActionPerformed(evt);
            }
        });

        skLabel.setText("Sk");

        xkLabel.setText("Xk");

        vkLabel.setText("Vk");

        dkLabel.setText("Dk");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(skLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(skInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(xkLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(vkLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(dkLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xkLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vkLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dkLabel))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cInput.setPreferredSize(new java.awt.Dimension(6, 25));
        cInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInputActionPerformed(evt);
            }
        });

        tInput.setPreferredSize(new java.awt.Dimension(6, 25));
        tInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tInputActionPerformed(evt);
            }
        });

        ckInput.setToolTipText("");
        ckInput.setMinimumSize(new java.awt.Dimension(20, 20));
        ckInput.setPreferredSize(new java.awt.Dimension(6, 25));
        ckInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckInputActionPerformed(evt);
            }
        });

        bkInput.setToolTipText("");
        bkInput.setMinimumSize(new java.awt.Dimension(20, 20));
        bkInput.setPreferredSize(new java.awt.Dimension(6, 25));
        bkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkInputActionPerformed(evt);
            }
        });

        cLabel.setText("C");

        tLabel.setText("T");

        ckLabel.setText("Ck");

        bkLabel.setText("Bk");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tLabel)
                            .addComponent(ckLabel)
                            .addComponent(bkLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bkLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(resultOutput);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addGap(18, 18, 18)
                .addComponent(btnCalculate)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCalculate)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jButton1.setText("About");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        note.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        note.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        note.setText("Note: the most direct way to calculate any value will be taken with more priority. In The Forced Flow Law for calculating Xk, it will be used X and Vk rather than C, T and Ck to calculate it.");
        jScrollPane2.setViewportView(note);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(346, 346, 346))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel4)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckInputActionPerformed

    private void tInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tInputActionPerformed

    private void cInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cInputActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        String law = fundamentalLaws.getSelectedItem().toString();
        getValues();
        switch(law){
            case "Utilization Law":
            calculateUtilizationLaw();
            break;
            case "Little’s Law":
            calculateLittlesLaw();
            break;
            case "Response Time Law":
            calculateResponseTimeLaw();
            break;
            case "Forced Flow Law":
            calculateForcedFlowLaw();
            break;
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void varsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_varsActionPerformed

    private void ckInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckInput1ActionPerformed

    private void bkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bkInputActionPerformed

    private void xInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xInputActionPerformed

    private void nInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nInputActionPerformed

    private void rInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rInputActionPerformed

    private void zInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zInputActionPerformed

    private void uInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uInputActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        Creditos in = new Creditos();
        in.setLocationRelativeTo(null);
        in.setVisible(true);
        in.setTitle("Acerca De");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dkInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dkInputActionPerformed

    private void vkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vkInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vkInputActionPerformed

    private void skInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skInputActionPerformed

    private void xkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xkInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xkInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FundmentalLawsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FundmentalLawsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FundmentalLawsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FundmentalLawsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FundmentalLawsCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bkInput;
    private javax.swing.JLabel bkLabel;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JTextField cInput;
    private javax.swing.JLabel cLabel;
    private javax.swing.JTextField ckInput;
    private javax.swing.JTextField ckInput1;
    private javax.swing.JLabel ckLabel;
    private javax.swing.JTextField dkInput;
    private javax.swing.JLabel dkLabel;
    private javax.swing.JLabel formulaLabel;
    private javax.swing.JComboBox<String> fundamentalLaws;
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nInput;
    private javax.swing.JLabel nLabel;
    private javax.swing.JTextPane note;
    private javax.swing.JTextField rInput;
    private javax.swing.JLabel rLabel;
    private javax.swing.JTextPane resultOutput;
    private javax.swing.JTextField skInput;
    private javax.swing.JLabel skLabel;
    private javax.swing.JTextField tInput;
    private javax.swing.JLabel tLabel;
    private javax.swing.JTextField uInput;
    private javax.swing.JLabel uLabel;
    private javax.swing.JComboBox<String> vars;
    private javax.swing.JTextField vkInput;
    private javax.swing.JLabel vkLabel;
    private javax.swing.JTextField xInput;
    private javax.swing.JLabel xLabel;
    private javax.swing.JTextField xkInput;
    private javax.swing.JLabel xkLabel;
    private javax.swing.JTextField zInput;
    private javax.swing.JLabel zLabel;
    // End of variables declaration//GEN-END:variables

    private void hideTextFields() {
        //X, C and T always visible
        uInput.setVisible(false);
        nInput.setVisible(false);
        xInput.setVisible(false);
        rInput.setVisible(false); 
        zInput.setVisible(false); 
        xkInput.setVisible(false);
        skInput.setVisible(false);
        vkInput.setVisible(false); 
        dkInput.setVisible(false);
        ckInput.setVisible(false);
        bkInput.setVisible(false);
        
        //Labels
        uLabel.setVisible(false);
        nLabel.setVisible(false);
        xLabel.setVisible(false); 
        rLabel.setVisible(false); 
        zLabel.setVisible(false); 
        xkLabel.setVisible(false);
        skLabel.setVisible(false);
        vkLabel.setVisible(false); 
        dkLabel.setVisible(false);
        ckLabel.setVisible(false);
        bkLabel.setVisible(false);
    }
      
    private void getVariables() {
        String law = fundamentalLaws.getSelectedItem().toString();
        switch(law){
            case "Utilization Law":
                getVars();
                vars.setModel(new DefaultComboBoxModel(new String[]{"Uk", "Xk", "Sk", "X", "Dk","Vk"}));
                break;
            case "Little’s Law":
                getVars();
                vars.setModel(new DefaultComboBoxModel(new String[]{"N", "X", "R"}));
                break;
            case "Response Time Law":
                getVars();
                vars.setModel(new DefaultComboBoxModel(new String[]{"R","N", "X", "Z"}));
                break;
            case "Forced Flow Law":
                getVars();
                vars.setModel(new DefaultComboBoxModel(new String[]{"Xk", "X", "Vk"}));
                break;
        }
    }
    
    private void getVars() {
        String law = fundamentalLaws.getSelectedItem().toString();
        switch(law){
            case "Utilization Law":
                //U k = X k × S k = X × D k
                xkInput.setVisible(true);
                uInput.setVisible(true); 
                skInput.setVisible(true);
                xInput.setVisible(true); 
                dkInput.setVisible(true);
                ckInput.setVisible(true);
                bkInput.setVisible(true);
                
                uLabel.setVisible(true);
                xkLabel.setVisible(true); 
                skLabel.setVisible(true);
                xLabel.setVisible(true); 
                dkLabel.setVisible(true);
                ckLabel.setVisible(true);
                bkLabel.setVisible(true);
                break;
            case "Little’s Law":
                //N = X * R
                nInput.setVisible(true);
                xInput.setVisible(true); 
                rInput.setVisible(true); 
                
                nLabel.setVisible(true);
                xLabel.setVisible(true); 
                rLabel.setVisible(true);
                break;
            case "Response Time Law":
                // R = N / X − Z;
                rInput.setVisible(true);
                nInput.setVisible(true); 
                xInput.setVisible(true); 
                zInput.setVisible(true);
                rLabel.setVisible(true);
                nLabel.setVisible(true); 
                xLabel.setVisible(true); 
                zLabel.setVisible(true);
                break;
            case "Forced Flow Law":
                // xk = X × Vk
                xkInput.setVisible(true);
                xInput.setVisible(true); 
                vkInput.setVisible(true);
                ckInput.setVisible(true);
                
                xkLabel.setVisible(true);
                xLabel.setVisible(true); 
                vkLabel.setVisible(true);
                ckLabel.setVisible(true);
                break;
        }
        this.revalidate();
        this.repaint();
    }

    private void calculateForcedFlowLaw() {
       String unknownValue = vars.getSelectedItem().toString();
        // xk = X × Vk
        double result = 0;
        double X = verifyX();
        double Xk = verifyXk();

        switch(unknownValue){
            case "Xk":
                if( Xk >= 0) {
                    result = Xk;
                } else if (X >= 0 && !vk.isEmpty()) {
                    result = X  * Double.parseDouble(vk) ;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }
            break;
            case "X":
                if (X >= 0){
                   result = X;
                }else if (Xk >= 0 && !vk.isEmpty()) {
                result = Xk / Double.parseDouble(vk);
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }
                break;
            case "Vk":
            if (Xk >= 0 && X >= 0) {
                result = Xk / X;
            }else if(!ck.isEmpty() && !c.isEmpty()){
                result = Double.parseDouble(ck) /Double.parseDouble(c);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
            break;
        }
        resultOutput.setText(unknownValue + " for this system is " + result);
    }

    private void calculateLittlesLaw() {
        String unkwonValue = vars.getSelectedItem().toString();
        //N = X * R
        double result = 0;
        double X = verifyX();

        switch(unkwonValue){
            case "N":
            if (X >= 0 && !r.isEmpty()) {
                result = X * Double.parseDouble(r);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
            break;
            case "X":
                if (X>=0){
                    result = X;
                }else if (!n.isEmpty() && !r.isEmpty()) {
                result = Double.parseDouble(n) / Double.parseDouble(r);
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }
                break;
            case "R":
                if (X >= 0 && !n.isEmpty()) {
                    result = Double.parseDouble(n) / X;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }
                break;
            default:
                JOptionPane.showMessageDialog(this,"This value can't be obtained by Little's Law");        
        }

        resultOutput.setText(unkwonValue + " for this system is " + result);
    }

    private void calculateUtilizationLaw() {
        //U k = X k × S k = X × D k
        String unkwonValue = vars.getSelectedItem().toString();
        double result = 0;
        double X = verifyX();
        double Xk = verifyXk();
        double Dk = verifyDk();
        double Sk = verifySk();
        double Uk = verifyUk();

        switch(unkwonValue){
            case "Uk":
                if(Uk >= 0){
                    result = Uk;
                }else if (Xk >= 0 && Sk >= 0) {
                    result = Xk * Sk;
                } else if (X >= 0 && Dk >= 0) {
                    result = X * Dk;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                } 
                break;
            case "Xk":
                if(Xk >= 0){
                    result = Xk;
                } else if (Uk >= 0 && Sk >= 0) {
                    result = Uk / Sk;
                } else if (X >= 0 && Dk >= 0 && Sk >= 0) {
                   result = (X * Dk) / Sk;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                } 
                break;
            case "Sk":
                if (Sk >= 0){
                    result = Sk;
                }else if (!u.isEmpty() && Xk >= 0) {
                    result = Double.parseDouble(u) / Xk;
                } else if (X >= 0 && Dk >= 0 && Sk >= 0) {
                    result = (X * Dk) / Xk;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                } 
                break;
            case "X":
                if (X >= 0) {
                    result = X;
                }else if (Xk >= 0 && Sk >= 0 && Dk >= 0) {
                    result = (Xk * Sk) / Dk;
                } else if (Uk >= 0 && Dk >= 0) {
                    result = Uk / Dk;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                } 
                break;
                 //U k = X k × S k = X × D k
            case "Dk":
                if (Dk >= 0){
                    result = Dk;
                }else if (Xk >= 0 && Sk >= 0 && X >= 0) {
                    result = (Xk * Sk) / X;
                } else if (Uk >= 0 && X >= 0) {
                    result = Uk / X;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }                   
                break;
            case "Vk":
                //Other ways to obtain vk are in forced flow law
                if(Sk >=0 && Dk >=0){
                    result = Dk / Sk;
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Parameters");
                }
                break;
        }

        resultOutput.setText(unkwonValue + " for this system is " + result);

}

private void calculateResponseTimeLaw() {
    String unknownValue = vars.getSelectedItem().toString();
    // R = N / X − Z;
    getValues();
    double result = 0;            
    double X = verifyX();

    switch(unknownValue){
        case "R":
            if (!n.isEmpty() && X >= 0 && !z.isEmpty()) {
                result = (Double.parseDouble(n) / X) - Double.parseDouble(z) ;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
        break;
        case "N":
            if (!r.isEmpty() && X >= 0 && !z.isEmpty()) {
                result = (Double.parseDouble(r) + Double.parseDouble(z)) * X;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
            break;
        case "X":
            if(X >= 0) {
                result = X;
            }else if (!n.isEmpty() && !r.isEmpty() && !z.isEmpty()) {
                result = (Double.parseDouble(n) / Double.parseDouble(r)) - Double.parseDouble(z) ;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
            break;
        case "Z":
            if (!n.isEmpty() && !r.isEmpty() && X >= 0) {
                result = (Double.parseDouble(n) / X) - Double.parseDouble(r) ;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Parameters");
            }
        break;
    }

    resultOutput.setText(unknownValue + " for this system is " + result);
    }

    private void getValues() {
        r = rInput.getText();
        n = nInput.getText();
        x = xInput.getText();
        z = zInput.getText();
        u = uInput.getText();
        x = xInput.getText();
        dk = dkInput.getText();
        vk = vkInput.getText();
        xk = xkInput.getText();
        sk = skInput.getText();
        ck = ckInput.getText();
        c = cInput.getText();
        t = tInput.getText();
        bk = bkInput.getText();
    }

    private double verifyX() {
        double X = -1;
        if(!x.isEmpty()) {
            X = Double.parseDouble(x);
        }else if(!c.isEmpty() && !t.isEmpty()) {
            X = Double.parseDouble(c) / Double.parseDouble(t);
        } 
        return X;
    }

    private double verifyXk() {
        double Xk = -1;
        if(!xk.isEmpty()){
             Xk = Double.parseDouble(xk);
        } else if(!ck.isEmpty() && !t.isEmpty()) {
             Xk = Double.parseDouble(ck) / Double.parseDouble(t);
        }
        return Xk;
    }

    private void setFormulaLabel() {
        String law = fundamentalLaws.getSelectedItem().toString();
        String formula = "";
        switch(law){
            case "Utilization Law":
            formula = "Uk = Xk × Sk = X × Dk";
            break;
            case "Little’s Law":
            formula = "N = X * R";
            break;
            case "Response Time Law":
            formula = "R = N / X − Z";
            break;
            case "Forced Flow Law":
            formula = "Xk = X × Vk";
            break;
        }
        
        formulaLabel.setText(law + ": " + formula);
    }

    private double verifyDk() {
        double Dk = -1;
        if(!dk.isEmpty()){
            Dk = Double.parseDouble(dk);
        } else if(!bk.isEmpty() && !c.isEmpty()) {
            Dk = Double.parseDouble(bk) / Double.parseDouble(c);
        } else if(!vk.isEmpty() && !sk.isEmpty()) {
            Dk = Double.parseDouble(sk) * Double.parseDouble(dk);
        } else if(!u.isEmpty() && !t.isEmpty() && !c.isEmpty()) {
            Dk = (Double.parseDouble(u) * Double.parseDouble(t)) / Double.parseDouble(c);
        }
        return Dk;
    }

    private double verifySk() {
        double Sk = -1;
        if(!sk.isEmpty()){
            Sk = Double.parseDouble(sk);
        } else if(!bk.isEmpty() && !ck.isEmpty()) {
            Sk = Double.parseDouble(bk) / Double.parseDouble(ck);
        } else if(!u.isEmpty() && !t.isEmpty() && !ck.isEmpty()) {
            Sk = (Double.parseDouble(u) * Double.parseDouble(t)) / Double.parseDouble(ck);
        }
        return Sk;
    }

    private double verifyUk() {
        double Uk = -1;
        if (!u.isEmpty()){
            Uk = Double.parseDouble(u);
        } else if(!bk.isEmpty() && !t.isEmpty()){
            Uk = Double.parseDouble(bk) / Double.parseDouble(t);
        } 
        return Uk;
    }

    private void disable(JLabel label, JTextField input) {
        label.setVisible(false);
        input.setVisible(false);
    }

    private void disableVar() {
        String unkwonValue = vars.getSelectedItem().toString();
           
        switch(unkwonValue){
            case "Uk":
                disable(uLabel, uInput);
                break;
            case "Xk":
                disable(xkLabel, xkInput);
                break;
            case "Sk":
                disable(skLabel, skInput);
                break;
            case "X":
                disable(xLabel, xInput);
                break;
            case "Dk":
                disable(dkLabel, dkInput);                  
                break;
            case "N":
                disable(nLabel, nInput);
                break;
            case "R":
                disable(rLabel, rInput);
                break;
            case "Z":
                disable(zLabel, zInput);
                break;
            case "Vk":
                disable(vkLabel, vkInput);
                break;
        }
    }
}
